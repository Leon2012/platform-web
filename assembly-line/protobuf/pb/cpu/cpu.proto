syntax = "proto3";

package protobuf.pb.cpu;

option go_package = "github.com/micro-in-cn/platform-web/assembly-line/protobuf/go/cpu";

import "basic/error.proto";
import "google/protobuf/timestamp.proto";


message TimesStat {
    google.protobuf.Timestamp timestamp = 1;
    string cpu = 2;
    double user = 3;
    double system = 4;
    double idle = 5;
    double nice = 6;
    double iowait = 7;
    double irq = 8;
    double softirq = 9;
    double steal = 10;
    double guest = 11;
    double guestNice = 12;
}

message InfoStat {
    google.protobuf.Timestamp timestamp = 1;
    int32 cpu = 2;
    string vendorId = 3;
    string family = 4;
    string model = 5;
    int32 stepping = 6;
    string physicalId = 7;
    string coreId = 8;
    int32 cores = 9;
    string modelName = 10;
    double mhz = 11;
    int32 cacheSize = 12;
    repeated string flags = 13;
    string microcode = 14;
}

message Percent {
    google.protobuf.Timestamp timestamp = 1;
    double percent = 2;
}

message Counts {
    google.protobuf.Timestamp timestamp = 1;
    int32 counts = 2;
}

message CPURequest {
    google.protobuf.Timestamp timestamp = 1;
    string IP = 2;
    string nodeName = 3;
    repeated TimesStat timesStat = 4;
    repeated InfoStat infoStat = 5;
    repeated Percent percent = 6;
    repeated Counts counts = 7;
}

message CPUResponse {
    basic.Error error = 1;
}

service CPUService {
    rpc PushCPUTimesStat (CPURequest) returns (CPUResponse) {
    }
    rpc PushCPUInfoStat (CPURequest) returns (CPUResponse) {
    }
    rpc PushCPUPercent (CPURequest) returns (CPUResponse) {
    }
    rpc PushCPUCounts (CPURequest) returns (CPUResponse) {
    }
}