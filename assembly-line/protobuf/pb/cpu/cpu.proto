syntax = "proto3";

package protobuf.pb.cpu.cpu;

option go_package = "github.com/micro-in-cn/platform-web/assembly-line/protobuf/go/cpu/cpu";

import "basic/error.proto";

message TimesStat {
    string CPU = 1;
    double user = 2;
    double system = 3;
    double idle = 4;
    double nice = 5;
    double iowait = 6;
    double irq = 7;
    double softirq = 8;
    double steal = 9;
    double guest = 10;
    double guestNice = 11;
}

message InfoStat {
    int32 cpu = 1;
    string vendorId = 2;
    string family = 3;
    string model = 4;
    int32 stepping = 5;
    string physicalId = 6;
    string coreId = 7;
    int32 cores = 8;
    string modelName = 9;
    double mhz = 10;
    int32 cacheSize = 11;
    repeated string flags = 12;
    string microcode = 13;
}

message Percent {
    double percent = 1;
}

message Counts {
    int32 counts = 1;
}

message CPURequest {
    uint64 timestamp = 1;
    string IP = 2;
    string nodeName = 3;
    TimesStat timesStat = 4;
    InfoStat infoStat = 5;
    Percent percent = 6;
    Counts counts = 7;
}

message CPUResponse {
    basic.Error error = 1;
}

service CPUService {
    rpc PushCPUTimesStat (CPURequest) returns (CPUResponse) {
    }
    rpc PushCPUInfoStat (CPURequest) returns (CPUResponse) {
    }
    rpc PushCPUPercent (CPURequest) returns (CPUResponse) {
    }
    rpc PushCPUCounts (CPURequest) returns (CPUResponse) {
    }
}