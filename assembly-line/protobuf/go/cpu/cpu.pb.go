// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cpu/cpu.proto

package cpu

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	basic "github.com/micro-in-cn/platform-web/assembly-line/protobuf/go/basic"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimesStat struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CPU                  string   `protobuf:"bytes,2,opt,name=CPU,proto3" json:"CPU,omitempty"`
	User                 float64  `protobuf:"fixed64,3,opt,name=user,proto3" json:"user,omitempty"`
	System               float64  `protobuf:"fixed64,4,opt,name=system,proto3" json:"system,omitempty"`
	Idle                 float64  `protobuf:"fixed64,5,opt,name=idle,proto3" json:"idle,omitempty"`
	Nice                 float64  `protobuf:"fixed64,6,opt,name=nice,proto3" json:"nice,omitempty"`
	Iowait               float64  `protobuf:"fixed64,7,opt,name=iowait,proto3" json:"iowait,omitempty"`
	Irq                  float64  `protobuf:"fixed64,8,opt,name=irq,proto3" json:"irq,omitempty"`
	Softirq              float64  `protobuf:"fixed64,9,opt,name=softirq,proto3" json:"softirq,omitempty"`
	Steal                float64  `protobuf:"fixed64,10,opt,name=steal,proto3" json:"steal,omitempty"`
	Guest                float64  `protobuf:"fixed64,11,opt,name=guest,proto3" json:"guest,omitempty"`
	GuestNice            float64  `protobuf:"fixed64,12,opt,name=guestNice,proto3" json:"guestNice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimesStat) Reset()         { *m = TimesStat{} }
func (m *TimesStat) String() string { return proto.CompactTextString(m) }
func (*TimesStat) ProtoMessage()    {}
func (*TimesStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f0493b3e98ba1a, []int{0}
}

func (m *TimesStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimesStat.Unmarshal(m, b)
}
func (m *TimesStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimesStat.Marshal(b, m, deterministic)
}
func (m *TimesStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimesStat.Merge(m, src)
}
func (m *TimesStat) XXX_Size() int {
	return xxx_messageInfo_TimesStat.Size(m)
}
func (m *TimesStat) XXX_DiscardUnknown() {
	xxx_messageInfo_TimesStat.DiscardUnknown(m)
}

var xxx_messageInfo_TimesStat proto.InternalMessageInfo

func (m *TimesStat) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TimesStat) GetCPU() string {
	if m != nil {
		return m.CPU
	}
	return ""
}

func (m *TimesStat) GetUser() float64 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *TimesStat) GetSystem() float64 {
	if m != nil {
		return m.System
	}
	return 0
}

func (m *TimesStat) GetIdle() float64 {
	if m != nil {
		return m.Idle
	}
	return 0
}

func (m *TimesStat) GetNice() float64 {
	if m != nil {
		return m.Nice
	}
	return 0
}

func (m *TimesStat) GetIowait() float64 {
	if m != nil {
		return m.Iowait
	}
	return 0
}

func (m *TimesStat) GetIrq() float64 {
	if m != nil {
		return m.Irq
	}
	return 0
}

func (m *TimesStat) GetSoftirq() float64 {
	if m != nil {
		return m.Softirq
	}
	return 0
}

func (m *TimesStat) GetSteal() float64 {
	if m != nil {
		return m.Steal
	}
	return 0
}

func (m *TimesStat) GetGuest() float64 {
	if m != nil {
		return m.Guest
	}
	return 0
}

func (m *TimesStat) GetGuestNice() float64 {
	if m != nil {
		return m.GuestNice
	}
	return 0
}

type InfoStat struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Cpu                  int32    `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	VendorId             string   `protobuf:"bytes,3,opt,name=vendorId,proto3" json:"vendorId,omitempty"`
	Family               string   `protobuf:"bytes,4,opt,name=family,proto3" json:"family,omitempty"`
	Model                string   `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Stepping             int32    `protobuf:"varint,6,opt,name=stepping,proto3" json:"stepping,omitempty"`
	PhysicalId           string   `protobuf:"bytes,7,opt,name=physicalId,proto3" json:"physicalId,omitempty"`
	CoreId               string   `protobuf:"bytes,8,opt,name=coreId,proto3" json:"coreId,omitempty"`
	Cores                int32    `protobuf:"varint,9,opt,name=cores,proto3" json:"cores,omitempty"`
	ModelName            string   `protobuf:"bytes,10,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Mhz                  float64  `protobuf:"fixed64,11,opt,name=mhz,proto3" json:"mhz,omitempty"`
	CacheSize            int32    `protobuf:"varint,12,opt,name=cacheSize,proto3" json:"cacheSize,omitempty"`
	Flags                []string `protobuf:"bytes,13,rep,name=flags,proto3" json:"flags,omitempty"`
	Microcode            string   `protobuf:"bytes,14,opt,name=microcode,proto3" json:"microcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoStat) Reset()         { *m = InfoStat{} }
func (m *InfoStat) String() string { return proto.CompactTextString(m) }
func (*InfoStat) ProtoMessage()    {}
func (*InfoStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f0493b3e98ba1a, []int{1}
}

func (m *InfoStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoStat.Unmarshal(m, b)
}
func (m *InfoStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoStat.Marshal(b, m, deterministic)
}
func (m *InfoStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoStat.Merge(m, src)
}
func (m *InfoStat) XXX_Size() int {
	return xxx_messageInfo_InfoStat.Size(m)
}
func (m *InfoStat) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoStat.DiscardUnknown(m)
}

var xxx_messageInfo_InfoStat proto.InternalMessageInfo

func (m *InfoStat) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *InfoStat) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *InfoStat) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *InfoStat) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *InfoStat) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *InfoStat) GetStepping() int32 {
	if m != nil {
		return m.Stepping
	}
	return 0
}

func (m *InfoStat) GetPhysicalId() string {
	if m != nil {
		return m.PhysicalId
	}
	return ""
}

func (m *InfoStat) GetCoreId() string {
	if m != nil {
		return m.CoreId
	}
	return ""
}

func (m *InfoStat) GetCores() int32 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *InfoStat) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *InfoStat) GetMhz() float64 {
	if m != nil {
		return m.Mhz
	}
	return 0
}

func (m *InfoStat) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *InfoStat) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *InfoStat) GetMicrocode() string {
	if m != nil {
		return m.Microcode
	}
	return ""
}

type Percent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Percent              float64  `protobuf:"fixed64,2,opt,name=percent,proto3" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Percent) Reset()         { *m = Percent{} }
func (m *Percent) String() string { return proto.CompactTextString(m) }
func (*Percent) ProtoMessage()    {}
func (*Percent) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f0493b3e98ba1a, []int{2}
}

func (m *Percent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Percent.Unmarshal(m, b)
}
func (m *Percent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Percent.Marshal(b, m, deterministic)
}
func (m *Percent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Percent.Merge(m, src)
}
func (m *Percent) XXX_Size() int {
	return xxx_messageInfo_Percent.Size(m)
}
func (m *Percent) XXX_DiscardUnknown() {
	xxx_messageInfo_Percent.DiscardUnknown(m)
}

var xxx_messageInfo_Percent proto.InternalMessageInfo

func (m *Percent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Percent) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

type Counts struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Counts               int32    `protobuf:"varint,2,opt,name=counts,proto3" json:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Counts) Reset()         { *m = Counts{} }
func (m *Counts) String() string { return proto.CompactTextString(m) }
func (*Counts) ProtoMessage()    {}
func (*Counts) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f0493b3e98ba1a, []int{3}
}

func (m *Counts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Counts.Unmarshal(m, b)
}
func (m *Counts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Counts.Marshal(b, m, deterministic)
}
func (m *Counts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Counts.Merge(m, src)
}
func (m *Counts) XXX_Size() int {
	return xxx_messageInfo_Counts.Size(m)
}
func (m *Counts) XXX_DiscardUnknown() {
	xxx_messageInfo_Counts.DiscardUnknown(m)
}

var xxx_messageInfo_Counts proto.InternalMessageInfo

func (m *Counts) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Counts) GetCounts() int32 {
	if m != nil {
		return m.Counts
	}
	return 0
}

type CPURequest struct {
	Timestamp            int64        `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IP                   string       `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	NodeName             string       `protobuf:"bytes,3,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	TimesStat            []*TimesStat `protobuf:"bytes,4,rep,name=timesStat,proto3" json:"timesStat,omitempty"`
	InfoStat             []*InfoStat  `protobuf:"bytes,5,rep,name=infoStat,proto3" json:"infoStat,omitempty"`
	Percent              []*Percent   `protobuf:"bytes,6,rep,name=percent,proto3" json:"percent,omitempty"`
	Counts               []*Counts    `protobuf:"bytes,7,rep,name=counts,proto3" json:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CPURequest) Reset()         { *m = CPURequest{} }
func (m *CPURequest) String() string { return proto.CompactTextString(m) }
func (*CPURequest) ProtoMessage()    {}
func (*CPURequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f0493b3e98ba1a, []int{4}
}

func (m *CPURequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPURequest.Unmarshal(m, b)
}
func (m *CPURequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPURequest.Marshal(b, m, deterministic)
}
func (m *CPURequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPURequest.Merge(m, src)
}
func (m *CPURequest) XXX_Size() int {
	return xxx_messageInfo_CPURequest.Size(m)
}
func (m *CPURequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CPURequest.DiscardUnknown(m)
}

var xxx_messageInfo_CPURequest proto.InternalMessageInfo

func (m *CPURequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CPURequest) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *CPURequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CPURequest) GetTimesStat() []*TimesStat {
	if m != nil {
		return m.TimesStat
	}
	return nil
}

func (m *CPURequest) GetInfoStat() []*InfoStat {
	if m != nil {
		return m.InfoStat
	}
	return nil
}

func (m *CPURequest) GetPercent() []*Percent {
	if m != nil {
		return m.Percent
	}
	return nil
}

func (m *CPURequest) GetCounts() []*Counts {
	if m != nil {
		return m.Counts
	}
	return nil
}

type CPUResponse struct {
	Error                *basic.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CPUResponse) Reset()         { *m = CPUResponse{} }
func (m *CPUResponse) String() string { return proto.CompactTextString(m) }
func (*CPUResponse) ProtoMessage()    {}
func (*CPUResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f0493b3e98ba1a, []int{5}
}

func (m *CPUResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUResponse.Unmarshal(m, b)
}
func (m *CPUResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUResponse.Marshal(b, m, deterministic)
}
func (m *CPUResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUResponse.Merge(m, src)
}
func (m *CPUResponse) XXX_Size() int {
	return xxx_messageInfo_CPUResponse.Size(m)
}
func (m *CPUResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CPUResponse proto.InternalMessageInfo

func (m *CPUResponse) GetError() *basic.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*TimesStat)(nil), "protobuf.pb.cpu.cpu.TimesStat")
	proto.RegisterType((*InfoStat)(nil), "protobuf.pb.cpu.cpu.InfoStat")
	proto.RegisterType((*Percent)(nil), "protobuf.pb.cpu.cpu.Percent")
	proto.RegisterType((*Counts)(nil), "protobuf.pb.cpu.cpu.Counts")
	proto.RegisterType((*CPURequest)(nil), "protobuf.pb.cpu.cpu.CPURequest")
	proto.RegisterType((*CPUResponse)(nil), "protobuf.pb.cpu.cpu.CPUResponse")
}

func init() { proto.RegisterFile("cpu/cpu.proto", fileDescriptor_01f0493b3e98ba1a) }

var fileDescriptor_01f0493b3e98ba1a = []byte{
	// 703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcd, 0x6e, 0xdb, 0x38,
	0x10, 0xc7, 0xd7, 0x76, 0x64, 0x5b, 0xf4, 0x26, 0x9b, 0xe5, 0x7e, 0x80, 0xc8, 0x66, 0xb3, 0x86,
	0x4f, 0x06, 0x16, 0xb6, 0x80, 0x04, 0x28, 0xd0, 0xa2, 0x28, 0xd0, 0x1a, 0x41, 0xe1, 0x4b, 0x60,
	0x30, 0x71, 0x0b, 0xf4, 0x26, 0x53, 0xb4, 0x4d, 0x40, 0x12, 0x15, 0x51, 0x4a, 0xe0, 0xbc, 0x4b,
	0xdf, 0xa4, 0x4f, 0xd4, 0x53, 0x1f, 0xa1, 0x98, 0x21, 0x25, 0xf5, 0xe0, 0x36, 0x3d, 0xe4, 0xe4,
	0xf9, 0xff, 0x35, 0x33, 0x24, 0x7f, 0xfc, 0x30, 0x39, 0x14, 0x59, 0x19, 0x88, 0xac, 0x9c, 0x66,
	0xb9, 0x2e, 0x34, 0xfd, 0x03, 0x7f, 0x56, 0xe5, 0x7a, 0x9a, 0xad, 0xa6, 0x60, 0x8b, 0xac, 0x3c,
	0xf9, 0x7d, 0x15, 0x1a, 0x25, 0x02, 0x99, 0xe7, 0x3a, 0xb7, 0x79, 0xa3, 0x8f, 0x6d, 0xe2, 0xdf,
	0xa8, 0x44, 0x9a, 0xeb, 0x22, 0x2c, 0xe8, 0x29, 0xf1, 0x0b, 0x10, 0x45, 0x98, 0x64, 0xac, 0x35,
	0x6c, 0x8d, 0x3b, 0xbc, 0x31, 0xe8, 0x31, 0xe9, 0xcc, 0x16, 0x4b, 0xd6, 0x1e, 0xb6, 0xc6, 0x3e,
	0x87, 0x90, 0x52, 0x72, 0x50, 0x1a, 0x99, 0xb3, 0xce, 0xb0, 0x35, 0x6e, 0x71, 0x8c, 0xe9, 0xdf,
	0xa4, 0x6b, 0x76, 0xa6, 0x90, 0x09, 0x3b, 0x40, 0xd7, 0x29, 0xc8, 0x55, 0x51, 0x2c, 0x99, 0x67,
	0x73, 0x21, 0x06, 0x2f, 0x55, 0x42, 0xb2, 0xae, 0xf5, 0x20, 0x86, 0x7a, 0xa5, 0xef, 0x43, 0x55,
	0xb0, 0x9e, 0xad, 0xb7, 0x0a, 0x46, 0x57, 0xf9, 0x2d, 0xeb, 0xa3, 0x09, 0x21, 0x65, 0xa4, 0x67,
	0xf4, 0xba, 0x00, 0xd7, 0x47, 0xb7, 0x92, 0xf4, 0x4f, 0xe2, 0x99, 0x42, 0x86, 0x31, 0x23, 0xe8,
	0x5b, 0x01, 0xee, 0xa6, 0x94, 0xa6, 0x60, 0x03, 0xeb, 0xa2, 0x80, 0x35, 0x63, 0x70, 0x05, 0x13,
	0xf9, 0x15, 0xbf, 0x34, 0xc6, 0xe8, 0x4b, 0x9b, 0xf4, 0xe7, 0xe9, 0x5a, 0xff, 0x1c, 0x1e, 0x91,
	0x95, 0x88, 0xc7, 0xe3, 0x10, 0xd2, 0x13, 0xd2, 0xbf, 0x93, 0x69, 0xa4, 0xf3, 0x79, 0x84, 0x88,
	0x7c, 0x5e, 0x6b, 0x58, 0xe6, 0x3a, 0x4c, 0x54, 0xbc, 0x43, 0x4c, 0x3e, 0x77, 0x0a, 0x26, 0x99,
	0xe8, 0x48, 0xc6, 0xc8, 0xc9, 0xe7, 0x56, 0x40, 0x27, 0x53, 0xc8, 0x2c, 0x53, 0xe9, 0x06, 0x61,
	0x79, 0xbc, 0xd6, 0xf4, 0x8c, 0x90, 0x6c, 0xbb, 0x33, 0x4a, 0x84, 0xf1, 0x3c, 0x42, 0x68, 0x3e,
	0xff, 0xc6, 0x81, 0x91, 0x84, 0xce, 0xe5, 0x3c, 0x42, 0x76, 0x3e, 0x77, 0x0a, 0x46, 0x82, 0xc8,
	0x20, 0x3c, 0x8f, 0x5b, 0x01, 0x6b, 0xc4, 0x21, 0xaf, 0xc2, 0x44, 0x22, 0x3e, 0x9f, 0x37, 0x06,
	0xac, 0x31, 0xd9, 0x3e, 0x38, 0x80, 0x10, 0x42, 0xbe, 0x08, 0xc5, 0x56, 0x5e, 0xab, 0x07, 0x8b,
	0xcf, 0xe3, 0x8d, 0x01, 0x63, 0xac, 0xe3, 0x70, 0x63, 0xd8, 0xe1, 0xb0, 0x03, 0xab, 0x41, 0x81,
	0x63, 0x28, 0x91, 0x6b, 0xa1, 0x23, 0xc9, 0x8e, 0xdc, 0x18, 0x95, 0x31, 0x7a, 0x4d, 0x7a, 0x0b,
	0x99, 0x0b, 0x99, 0x3e, 0x06, 0x9c, 0x91, 0x5e, 0x66, 0x13, 0x11, 0x7a, 0x8b, 0x57, 0x72, 0xf4,
	0x8a, 0x74, 0x67, 0xba, 0x4c, 0x0b, 0xf3, 0x48, 0x07, 0x44, 0x03, 0x79, 0x6e, 0xd7, 0x9c, 0x1a,
	0x7d, 0x6a, 0x13, 0x32, 0x5b, 0x2c, 0xb9, 0xbc, 0xad, 0x8e, 0xc8, 0x0f, 0x9a, 0x1c, 0x91, 0xf6,
	0x7c, 0xe1, 0x6e, 0x45, 0x7b, 0xbe, 0x80, 0xbd, 0x4a, 0x75, 0x24, 0x11, 0xa0, 0xdb, 0xf5, 0x4a,
	0xd3, 0x97, 0xae, 0x13, 0x1c, 0x27, 0x76, 0x30, 0xec, 0x8c, 0x07, 0xe7, 0x67, 0xd3, 0x3d, 0x57,
	0x75, 0x5a, 0xdf, 0x49, 0xde, 0x14, 0xd0, 0xe7, 0xa4, 0xaf, 0xdc, 0x59, 0x64, 0x1e, 0x16, 0xff,
	0xbb, 0xb7, 0xb8, 0x3a, 0xb0, 0xbc, 0x4e, 0xa7, 0xcf, 0x1a, 0x56, 0x5d, 0xac, 0x3c, 0xdd, 0x5b,
	0xe9, 0xc0, 0xd7, 0x24, 0xe9, 0x45, 0x4d, 0xa8, 0x87, 0x65, 0xff, 0xec, 0x2d, 0xb3, 0xb0, 0x6b,
	0x7c, 0x2f, 0xc8, 0x00, 0xe9, 0x99, 0x4c, 0xa7, 0x46, 0xd2, 0xff, 0x89, 0x87, 0x4f, 0x0e, 0xa2,
	0x1b, 0x9c, 0xff, 0xd5, 0xb4, 0xc0, 0xf7, 0x68, 0x7a, 0x09, 0x1f, 0xb9, 0xcd, 0x39, 0xff, 0x6c,
	0xd1, 0x5f, 0xcb, 0xfc, 0x0e, 0x5e, 0x83, 0xf7, 0xe4, 0x78, 0x51, 0x9a, 0xed, 0x6c, 0xb1, 0x6c,
	0x5e, 0xa9, 0xff, 0xf6, 0xcf, 0xa1, 0xde, 0xaf, 0x93, 0xe1, 0xf7, 0x13, 0xec, 0x94, 0x46, 0xbf,
	0xd0, 0x77, 0xe4, 0x37, 0xd7, 0xb8, 0xbe, 0xde, 0x4f, 0xd2, 0x77, 0x49, 0x8e, 0x5c, 0xdf, 0xea,
	0x10, 0x3f, 0x49, 0xdb, 0x1b, 0x72, 0xe8, 0xda, 0xba, 0x83, 0xfd, 0x14, 0x5d, 0xdf, 0xbc, 0xfd,
	0x70, 0xb9, 0x51, 0xc5, 0xb6, 0x5c, 0x4d, 0x85, 0x4e, 0x02, 0xbc, 0x82, 0x13, 0x95, 0x4e, 0x44,
	0x1a, 0x64, 0x71, 0x58, 0xac, 0x75, 0x9e, 0x4c, 0xee, 0xe5, 0x2a, 0x08, 0x8d, 0x91, 0xc9, 0x2a,
	0xde, 0x4d, 0x62, 0x95, 0xca, 0xa0, 0x6a, 0x1b, 0x6c, 0x74, 0xe0, 0xfe, 0x74, 0x56, 0x5d, 0x34,
	0x2f, 0xbe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x25, 0x40, 0x06, 0x86, 0x06, 0x00, 0x00,
}
